# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs


name: uRide-Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: 142.93.40.82
          username: zabilal
          password: Eneyohwei1! #${{ secrets.DIGITALOCEAN_URIDE_PASSWORD }}
          script: |
            sh deploy.sh
          
# name: uRide-Deploy

# on:
#   push:
#     branches:
#       - main
      
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           repository: uRide-NG/_uRide_Backend
#           token: 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 #${{ secrets.ACCESS_TOKEN }}
#       - name: Install dependencies
#         run: npm install
#       # - name: Build
#       #   run: npm run build
#       - name: Deploy to DigitalOcean Droplet
#         uses: appleboy/ssh-action@master
#         with:
#           host: 142.93.40.82
#           username: zabilal
#           password: Eneyohwei1! #${{ secrets.DIGITALOCEAN_URIDE_PASSWORD }}
#           script: |
#             cd var/www/uride/_uRide_Backend
#             git pull https://zabilal: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@github.com/uRide-NG/_uRide_Backend.git main
#             pm2 restart all

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [14.x, 16.x, 18.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test
